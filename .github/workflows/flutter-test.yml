name: Flutter Test

on:
  workflow_call:
    outputs:
      result:
        description: "Overall test result (success/failure)"
        value: ${{ jobs.run-tests.outputs.result }}
      # 後で必要になった場合のための成果物の出力パス
      # test_results_path:
      #   description: "テスト結果成果物へのパス"
      #   value: test-results

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.set-final-result.outputs.status }} # 最終結果のステータス
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: '3.29.3'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      # build_runner を実行してコード生成
      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      # JUnit XML出力のためにjunitreportを有効化
      - name: Activate junitreport
        run: dart pub global activate junitreport

      # テスト結果用ディレクトリを作成 (ルートとサブディレクトリ)
      - name: Create Test Results Directories
        run: |
          mkdir -p test-results/unit
          mkdir -p test-results/widget

      # --- Unit Test Step ---
      - name: Run Flutter Unit Tests with JUnit Output
        id: run-unit-tests
        run: |
          # Unitテストが test/unit/ にあると想定
          flutter test --machine test/unit/ | junitreport > test-results/unit/junit.xml
        continue-on-error: true

      # --- Widget Test Step ---
      - name: Run Flutter Widget Tests with JUnit Output
        id: run-widget-tests
        run: |
          # Widgetテストが test/widget/ にあると想定
          flutter test --machine test/widget/ | junitreport > test-results/widget/junit.xml
        continue-on-error: true

      # --- 結果集約 ---
      - name: Set final result status
        id: set-final-result
        run: |
          if [[ "${{ steps.run-unit-tests.outcome }}" == "success" && "${{ steps.run-widget-tests.outcome }}" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "All tests passed (Unit & Widget)."
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "::error::One or more test suites failed."
            [[ "${{ steps.run-unit-tests.outcome }}" == "failure" ]] && echo "::error::- Unit tests failed."
            [[ "${{ steps.run-widget-tests.outcome }}" == "failure" ]] && echo "::error::- Widget tests failed."
            exit 1 # ワークフローを失敗させる
          fi

      # --- Artifact Uploads ---
      # UnitテストのJUnit結果をアップロード
      - name: Upload Unit Test Results
        # ユニットテストが実行された場合のみ
        if: steps.run-unit-tests.outcome != 'skipped' && hashFiles('test-results/unit/junit.xml') != ''
        uses: actions/upload-artifact@v4
        with:
          name: test-results-unit-junit
          path: test-results/unit/junit.xml
          retention-days: 7

      # WidgetテストのJUnit結果をアップロード
      - name: Upload Widget Test Results (JUnit XML)
         # ウィジェットテストが実行された場合のみ
        if: steps.run-widget-tests.outcome != 'skipped' && hashFiles('test-results/widget/junit.xml') != ''
        uses: actions/upload-artifact@v4
        with:
          name: test-results-widget-junit
          path: test-results/widget/junit.xml
          retention-days: 7 